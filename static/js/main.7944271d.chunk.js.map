{"version":3,"sources":["hooks/useWordGame.js","App.js","index.js"],"names":["useWordGame","useState","startingTime","setStartingTime","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textBoxRef","useRef","useEffect","setTimeout","time","trim","split","filter","word","length","calculateWordCount","handleTimerChange","event","value","target","handleChange","startGame","current","disabled","focus","App","ref","onChange","type","onClick","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"sLAEe,SAASA,IACtB,IADoC,EAGIC,mBAFV,IADM,mBAG7BC,EAH6B,KAGfC,EAHe,OAIZF,mBAAS,IAJG,mBAI7BG,EAJ6B,KAIvBC,EAJuB,OAKMJ,mBAJZ,IADM,mBAK7BK,EAL6B,KAKdC,EALc,OAMMN,oBAAS,GANf,mBAM7BO,EAN6B,KAMdC,EANc,OAOFR,mBAAS,GAPP,mBAO7BS,EAP6B,KAOlBC,EAPkB,KAQ9BC,EAAaC,iBAAO,MAyC1B,OAVAC,qBAAU,WACJN,GAAiBF,EAAgB,EACnCS,YAAW,WACTR,GAAiB,SAAAS,GAAI,OAAIA,EAAO,OAC/B,KACwB,IAAlBV,IATXG,GAAiB,GACjBE,EAfF,SAA4BP,GAE1B,OADiBA,EAAKa,OAAOC,MAAM,KACnBC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,OAa/BC,CAAmBlB,OAW/B,CAACE,EAAeE,IAEZ,CACLI,aACAW,kBAzCF,SAA2BC,GAAQ,IACzBC,EAAUD,EAAME,OAAhBD,MACRtB,EAAgBsB,GAChBlB,EAAiBkB,IAuCjBE,aApCF,SAAsBH,GAAQ,IACpBC,EAAUD,EAAME,OAAhBD,MACRpB,EAAQoB,IAmCRrB,OACAI,gBACAF,gBACAsB,UA9BF,WACEnB,GAAiB,GACjBF,EAAiBL,GACjBG,EAAQ,IACRO,EAAWiB,QAAQC,UAAW,EAC9BlB,EAAWiB,QAAQE,SA0BnBrB,YACAR,gBCvDW,SAAS8B,IAAO,IAAD,EAWxBhC,IATFE,EAF0B,EAE1BA,aACAU,EAH0B,EAG1BA,WACAW,EAJ0B,EAI1BA,kBACAI,EAL0B,EAK1BA,aACAvB,EAN0B,EAM1BA,KACAI,EAP0B,EAO1BA,cACAF,EAR0B,EAQ1BA,cACAsB,EAT0B,EAS1BA,UACAlB,EAV0B,EAU1BA,UAGF,OACE,6BACE,qDAEA,8BACEuB,IAAKrB,EACLsB,SAAUP,EACVF,MAAOrB,EACP0B,UAAWtB,IAGb,6CAEE,2BACE2B,KAAK,OACLV,MAAOvB,EACPgC,SAAUX,EACVO,SAAUtB,IACT,IAPL,UAWA,+CAAqBF,EAArB,WAEA,4BAAQ8B,QAASR,EAAWE,SAAUtB,GAAtC,SAIA,2CAAiBE,ICzCvB,IAAM2B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACV,EAAD,OAEFK,I","file":"static/js/main.7944271d.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function useWordGame() {\r\n  const DEFAULT_STARTING_TIME = 20;\r\n\r\n  const [startingTime, setStartingTime] = useState(DEFAULT_STARTING_TIME);\r\n  const [text, setText] = useState(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState(DEFAULT_STARTING_TIME);\r\n  const [isTimeRunning, setIsTimeRunning] = useState(false);\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const textBoxRef = useRef(null);\r\n\r\n  function handleTimerChange(event) {\r\n    const { value } = event.target;\r\n    setStartingTime(value);\r\n    setTimeRemaining(value);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { value } = event.target;\r\n    setText(value);\r\n  }\r\n\r\n  function calculateWordCount(text) {\r\n    const wordsArr = text.trim().split(\" \");\r\n    return wordsArr.filter(word => word !== \"\").length;\r\n  }\r\n\r\n  function startGame() {\r\n    setIsTimeRunning(true);\r\n    setTimeRemaining(startingTime);\r\n    setText(\"\");\r\n    textBoxRef.current.disabled = false;\r\n    textBoxRef.current.focus();\r\n  }\r\n\r\n  function endGame() {\r\n    setIsTimeRunning(false);\r\n    setWordCount(calculateWordCount(text));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isTimeRunning && timeRemaining > 0) {\r\n      setTimeout(() => {\r\n        setTimeRemaining(time => time - 1);\r\n      }, 1000);\r\n    } else if (timeRemaining === 0) {\r\n      endGame();\r\n    }\r\n  }, [timeRemaining, isTimeRunning]);\r\n\r\n  return {\r\n    textBoxRef,\r\n    handleTimerChange,\r\n    handleChange,\r\n    text,\r\n    isTimeRunning,\r\n    timeRemaining,\r\n    startGame,\r\n    wordCount,\r\n    startingTime\r\n  };\r\n}\r\n","import React from \"react\";\nimport \"./styles/main.scss\";\n\nimport useWordGame from \"./hooks/useWordGame\";\n\nexport default function App() {\n  const {\n    startingTime,\n    textBoxRef,\n    handleTimerChange,\n    handleChange,\n    text,\n    isTimeRunning,\n    timeRemaining,\n    startGame,\n    wordCount\n  } = useWordGame();\n\n  return (\n    <div>\n      <h1>How fast do you type?</h1>\n\n      <textarea\n        ref={textBoxRef}\n        onChange={handleChange}\n        value={text}\n        disabled={!isTimeRunning}\n      />\n\n      <h4>\n        Set the timer:\n        <input\n          type=\"text\"\n          value={startingTime}\n          onChange={handleTimerChange}\n          disabled={isTimeRunning}\n        />{\" \"}\n        sec(s)\n      </h4>\n\n      <h4>Time remaining: {timeRemaining} sec(s)</h4>\n\n      <button onClick={startGame} disabled={isTimeRunning}>\n        Start\n      </button>\n\n      <h1>Word count: {wordCount}</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}